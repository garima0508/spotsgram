{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","fun","document","getElementById","logoutTimer","MainHeader","children","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","NavLinks","auth","useContext","to","exact","MainNavigation","useState","drawerIsOpen","sertDrawerIsOpen","closeDrawerHandler","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpiration","setTokenExpiration","setUserId","useCallback","uid","expirationDate","tokenExpirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.1bf47b1a.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React from \"react\";\r\n\r\nimport \"./LoadingSpinner.css\";\r\n\r\nconst LoadingSpinner = (props) => {\r\n  return (\r\n    <div className={`${props.asOverlay && \"loading-spinner__overlay\"}`}>\r\n      <div className=\"lds-dual-ring\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./Backdrop.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"backdrop\" onClick={props.fun}></div>,\r\n    document.getElementById(\"backdrop-hook\")\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExpiration, setTokenExpiration] = useState();\r\n  const [userId, setUserId] = useState(false);\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpirationDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpiration(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        expiration: tokenExpirationDate.toISOString(),\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpiration(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(\"userData\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpiration) {\r\n      const remainingTime = tokenExpiration.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpiration]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      login(\r\n        storedData.userId,\r\n        storedData.token,\r\n        new Date(storedData.expiration)\r\n      );\r\n    }\r\n  }, [login]);\r\n\r\n  return { token, login, logout, userId };\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./MainHeader.css\";\r\n\r\nconst MainHeader = (props) => {\r\n  return <header className=\"main-header\">{props.children}</header>;\r\n};\r\nexport default MainHeader;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"./SideDrawer.css\";\r\n\r\nconst SideDrawer = (props) => {\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames=\"slide-in-left\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className=\"side-drawer\" onClick={props.onClick}>\r\n        {props.children}\r\n      </aside>\r\n    </CSSTransition>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\r\n};\r\nexport default SideDrawer;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\nimport \"./NavLinks.css\";\r\n\r\nconst NavLinks = (props) => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      <li>\r\n        <NavLink to=\"/\" exact>\r\n          ALL USERS\r\n        </NavLink>\r\n      </li>\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\r\n        </li>\r\n      )}\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\" onClick={auth.logout}>\r\n            LOGOUT\r\n          </NavLink>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\nexport default NavLinks;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MainHeader from \"./MainHeader\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport BackDrop from \"../UIElements/Backdrop\";\r\nimport \"./MainNavigation.css\";\r\n\r\nconst MainNavigation = () => {\r\n  const [drawerIsOpen, sertDrawerIsOpen] = useState(false);\r\n  const openDrawerHandler = () => {\r\n    sertDrawerIsOpen(true);\r\n  };\r\n  const closeDrawerHandler = () => {\r\n    sertDrawerIsOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      {drawerIsOpen && <BackDrop fun={closeDrawerHandler} />}\r\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n        <nav className=\"main-navigation__drawer-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </SideDrawer>\r\n      <MainHeader>\r\n        <button\r\n          className=\"main-navigation__menu-btn\"\r\n          onClick={openDrawerHandler}\r\n        >\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <h1 className=\"main-navigation__title\">\r\n          <Link to=\"/\">Spotsgram</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </>\r\n  );\r\n};\r\nexport default MainNavigation;\r\n","import React, { Suspense } from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n// import Users from \"./user/pages/Users\";\n// import Auth from \"./user/pages/Auth\";\n// import NewPlace from \"./places/pages/NewPlace\";\n// import UserPlaces from \"./places/pages/UserPlaces\";\n// import UpdatePlace from \"./places/pages/UpdatePlace\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\n\nconst Users = React.lazy(() => import(\"./user/pages/Users\"));\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\nconst Auth = React.lazy(() => import(\"./user/pages/Auth\"));\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}